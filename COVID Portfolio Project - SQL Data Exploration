SELECT*
FROM [Portfolio Project]..covid_deaths
where continent is not null
order by 3,4

--SELECT*
--FROM [Portfolio Project]..covid_vaccinations
--order by 3,4

SELECT location,date,total_cases,new_cases, total_deaths,population
FROM [Portfolio Project]..covid_deaths
where continent is not null
order by 1,2

-- Looking at Total Cases vs Total Deaths
-- Probability of fatality in a specific country

SELECT location, date, total_cases, total_deaths, (CAST(total_deaths AS FLOAT)/CAST(total_cases AS FLOAT))*100 as DeathPercentage
FROM [Portfolio Project]..covid_deaths
where location like '%malaysia%'
and continent is not null 
order by 1,2

-- Looking at Total Cases vs Population
-- Percentage of the population affected by COVID-19 

SELECT location, date, population, total_cases, (total_cases/population)*100 as CovidPercentage
FROM [Portfolio Project]..covid_deaths
where location like '%malaysia%'
order by 1,2

-- Looking at countries with Highest Infection Rate compared to population 

SELECT location, population, MAX(total_cases) as HighestInfectionCount, MAX((total_cases/population))*100 as CovidPercentage
FROM [Portfolio Project]..covid_deaths
group by location,population
order by CovidPercentage DESC

-- Countries with Highest Death Count per Population

Select Location, MAX(cast(Total_deaths as float)) as TotalDeathCount
FROM [Portfolio Project]..covid_deaths
--where location like '%malaysia%'
Where continent is not null 
Group by Location
order by TotalDeathCount desc

-- BREAKING THINGS DOWN BY CONTINENT

-- Showing contintents with the highest death count per population

Select continent, MAX(cast(Total_deaths as float)) as TotalDeathCount
FROM [Portfolio Project]..covid_deaths
--Where location like '%states%'
Where continent is not null 
Group by continent
order by TotalDeathCount desc

-- GLOBAL NUMBERS

Select SUM(new_cases) as total_cases, SUM(cast(new_deaths as int)) as total_deaths, SUM(cast(new_deaths as int))/SUM(New_Cases)*100 as DeathPercentage
FROM [Portfolio Project]..covid_deaths
--Where location like '%states%'
where continent is not null 
--Group By date
order by 1,2

-- Total Population vs Vaccinations
-- Shows Percentage of Population that has recieved at least one Covid Vaccine

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(bigint, vac.new_vaccinations)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
FROM [Portfolio Project]..covid_deaths dea
JOIN [Portfolio Project]..covid_vaccinations vac
	ON dea.location = vac.location
	AND dea.date = vac.date
WHERE dea.continent IS NOT NULL 
ORDER BY 2, 3;

-- Using CTE to perform Calculation on Partition By in previous query

WITH CTE AS (
    SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
        SUM(CONVERT(bigint, vac.new_vaccinations)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) as RollingPeopleVaccinated
    FROM [Portfolio Project]..covid_deaths dea
JOIN [Portfolio Project]..covid_vaccinations vac
        ON dea.location = vac.location
        AND dea.date = vac.date
    WHERE dea.continent IS NOT NULL 
)
SELECT *,
    (RollingPeopleVaccinated / population) * 100 AS VaccinationPercentage
FROM CTE
ORDER BY location, date;

-- Using Temp Table to perform Calculation on Partition By in previous query

DROP Table if exists #PercentPopulationVaccinated
Create Table #PercentPopulationVaccinated
(
Continent nvarchar(255),
Location nvarchar(255),
Date datetime,
Population numeric,
New_vaccinations numeric,
RollingPeopleVaccinated numeric
)

Insert into #PercentPopulationVaccinated
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(bigint,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
FROM [Portfolio Project]..covid_deaths dea
JOIN [Portfolio Project]..covid_vaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
--where dea.continent is not null 
--order by 2,3

Select *, (RollingPeopleVaccinated/Population)*100 as PercentageofRollingPeopleVaccinated 
From #PercentPopulationVaccinated

-- Creating View to store data for later visualizations

Create View PercentPopulationVaccinated as
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
FROM [Portfolio Project]..covid_deaths dea
JOIN [Portfolio Project]..covid_vaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null 


--the end
